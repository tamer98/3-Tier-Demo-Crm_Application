name: demo-crm CI/CD
on:
  push:
    branches:
      - main
jobs:
  build_application:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    defaults:
      run: 
        working-directory: ./demo-crm-main
    steps:
    - name: Check out code
      uses: actions/checkout@v2
      # Allow the runner to check out the source code from the repository.
#Clone/Pull(1)

    - name: Load from .secrets and .env_other files
      run: |
         for file in .env_other .secrets; do
            if [ -f "$file" ]; then
              export $(grep -v '^#' "$file" | xargs)
            fi
          done
      
# Build the application (2)
    - name: Build the application
      run: |
        npm install  # Installs dependencies (use instead of npm install)
        npm run build  # Builds the Next.js app
        npm run dev &  # Start the development server in the background

    - name: wait for server to be upload
      run: sleep 5
      
    - name: Check application 
      run: curl http://localhost:3000
      
#Package step (4)
    - name: Build Docker image
      run: docker build -t demo-crm:latest .
      
        
#E2E (5)
    - name: E2E Build the docker-compose
      run: docker compose up -d
      
    - name: Check running containers and existed images
      run: |
        docker ps -a
        docker images
        
    - name: wait application to be upload
      run: sleep 5
      
    - name: Check application after docker compose
      run: curl http://localhost:80
      
# AWS connect
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: $ECR_ACCESS_KEY
        aws-secret-access-key: $ECR_SECRET_KEY
        aws-region: ap-south-1
        
    - name: Authenticate Docker to AWS ECR
      run: $DOCKER_AUTENTICATES_AWS 
      # Authenticates Docker to AWS ECR using the AWS CLI.
   
    - name: Tag Docker image
      run: docker tag application_portfolio-demo-crm $ECR_REPOSITORY_URI:deploy
      # Tags the Docker image for the ECR repository.
  
    - name: Push Docker image to ECR
      run: docker push $ECR_REPOSITORY_URI:deploy
      # Pushes the Docker image to the specified ECR repository.


    - name: Update Kubernetes Deployment
      run: |
        $EKS_Config
        kubectl set image deployment/demo-crm-deployment demo-crm-container=$ECR_REPOSITORY_URI:deploy
        kubectl rollout status deployment/demo-crm-deployment
        kubectl get pods
        kubectl describe deployment demo-crm
