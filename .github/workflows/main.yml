name: demo-crm CI/CD
on:
  push:
    branches:
      - main
jobs:
  build_application:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    defaults:
      run:
        working-directory: ./demo-crm-main
    steps:
    - name: Check out code
      uses: actions/checkout@v2
      # Allow the runner to check out the source code from the repository.
      #Clone/Pull(1)
      #Build the application (2)
      
#should i create a unit tests check every component alone ?
    - name: Run the application
      # working-directory: ./demo-crm-main
      run: |
        npm install
        npm run dev &
    
#Package step (3)
    - name: Build Docker image
      run: docker build -t demo-crm:latest .
      
    - name: Run Docker container
      run:  docker run -d -p 8080:3000 --name demo-crm-container demo-crm:latest
      
    - name: wait for container inizalition upload
      run: sleep 5
      
#Unit tests (4)
    - name: Check application 
      run: curl http://localhost:8080 
      
    - name: delete image pre docker compose
      run: |
        # docker stop demo-crm-container
        # sleep 2
        # docker rm demo-crm-container
    #     docker rmi demo-crm:latest
        
  #E2E (5)
    - name: E2E Build the docker-compose
      run: docker compose up -d
      
    - name: Check running containers and existed images
      run: |
        docker ps
        docker images
        
    - name: Check application (wait to upload)
      run: sleep 5
      
    - name: Check application after docker compose
      run: curl http://localhost:80
      
# AWS connect
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.ECR_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.ECR_SECRET_KEY }}
        aws-region: ap-south-1
        
    - name: Authenticate Docker to AWS ECR
      run: ${{ secrets.DOCKER_AUTENTICATES_AWS }}
      # Authenticates Docker to AWS ECR using the AWS CLI.
   
    - name: Tag Docker image
      run: docker tag application_portfolio-demo-crm 390844757505.dkr.ecr.ap-south-1.amazonaws.com/development/demo-crm:deploy
      # Tags the Docker image for the ECR repository.
  
    - name: Push Docker image to ECR
      run: docker push 390844757505.dkr.ecr.ap-south-1.amazonaws.com/development/demo-crm:deploy
      # Pushes the Docker image to the specified ECR repository.


    - name: Update Kubernetes Deployment
      run: |
        aws eks --region ap-south-1 update-kubeconfig --name tamer-cluster
        kubectl set image deployment/demo-crm-deployment demo-crm-container=390844757505.dkr.ecr.ap-south-1.amazonaws.com/development/demo-crm:deploy
        kubectl rollout status deployment/demo-crm-deployment
        kubectl get pods
        kubectl describe deployment demo-crm
